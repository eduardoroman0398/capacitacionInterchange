package pageobjects;

import org.openqa.selenium.By;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import support.util;

import java.io.IOException;

public class dashboard02Page extends util {

    @FindBy(xpath = "//*[@id=\"int-wrapper\"]/div/app-home/div/div/app-jurisdiction-products/div/div[1]/div/div/span/button") protected WebElement btnViewMore;
    @FindBy(xpath = "/html/body/ngb-modal-window/div/div/div[1]/button") protected WebElement btnCloseViewMore;

    public dashboard02Page() {
        PageFactory.initElements(driver, this);
    }

    public void seleccionarInterchangeFeeDetail() throws InterruptedException, IOException {
        Thread.sleep(1_000);
        wait.until(ExpectedConditions.elementToBeClickable(btnViewMore));
        btnViewMore.click();
        wait.until(ExpectedConditions.elementToBeClickable(btnCloseViewMore));
        Thread.sleep(1_000);
        btnCloseViewMore.click();
        evidencias();
    }

    public void seleccionarIntercangeFeesgeneratedbyJurisdiction(String barJurisdiction) throws InterruptedException, IOException {
        // Esperamos a que el gráfico esté visible
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ejs-chart")));

        WebElement barToClick = null;
        int attempts = 0;

        // Reintentar hasta 3 veces en caso de StaleElementReferenceException
        while (attempts < 3) {
            try {
                // Localizamos la barra según el valor proporcionado
                switch (barJurisdiction) {
                    case "Domestic Off-Us":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Domestic Off-Us')]")));
                        break;
                    case "Intraregional":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Intraregional')]")));
                        break;
                    case "Interregional":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Interregional')]")));
                        break;
                    default:
                        throw new IllegalArgumentException("Invalid bar value: " + barJurisdiction);
                }

                // Hacemos clic en la barra correspondiente
                barToClick.click();
                break; // Si el clic es exitoso, salimos del ciclo
            } catch (StaleElementReferenceException e) {
                attempts++;  // Reintentar si el elemento es "stale"
            }
        }

        if (attempts == 3) {
            System.out.println("No se pudo hacer clic después de 3 intentos.");
        }

        System.out.println("La barra seleccionada en Interchange Fees generated by Jurisdiction es: " + barJurisdiction);
    }

    public void seleccionar_Interchange_Fees_By_ProductType(String productType) {
        // Esperamos a que el gráfico esté visible
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ejs-chart")));

        WebElement barToClick = null;
        int attempts = 0;

        // Reintentar hasta 3 veces en caso de StaleElementReferenceException
        while (attempts < 3) {
            try {
                // Localizamos la barra según el valor proporcionado
                switch (productType) {
                    case "Debit":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Debit')]")));
                        break;
                    case "Credit":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Credit')]")));
                        break;
                    case "Prepaid":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Prepaid')]")));
                        break;
                    default:
                        throw new IllegalArgumentException("Invalid product type value: " + productType);
                }

                // Hacemos clic en la barra correspondiente
                barToClick.click();
                break; // Si el clic es exitoso, salimos del ciclo
            } catch (StaleElementReferenceException e) {
                attempts++;  // Reintentar si el elemento es "stale"
            }
        }

        if (attempts == 3) {
            System.out.println("No se pudo hacer clic después de 3 intentos.");
        }
        System.out.println("El valor seleccionado en la seccion Interchange Fees by Product Type es: " + productType);
    }

    public void seleccionar_Interchange_Fees_By_Program(String programType) throws IOException, InterruptedException {
        // Esperamos a que el gráfico esté visible
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ejs-chart")));

        WebElement barToClick = null;
        int attempts = 0;

        // Reintentar hasta 3 veces en caso de StaleElementReferenceException
        while (attempts < 3) {
            try {
                // Localizamos la barra según el valor proporcionado
                switch (programType) {
                    case "Consumer":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Consumer')]")));
                        break;
                    case "Commercial":
                        barToClick = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[name()='path' and contains(@aria-label, 'Commercial')]")));
                        break;
                    default:
                        throw new IllegalArgumentException("Invalid program type value: " + programType);
                }

                // Hacemos clic en la barra correspondiente
                barToClick.click();
                break; // Si el clic es exitoso, salimos del ciclo
            } catch (StaleElementReferenceException e) {
                attempts++;  // Reintentar si el elemento es "stale"
                System.out.println("Reintentando debido a StaleElementReferenceException, intento: " + attempts);
            }
        }

        if (attempts == 3) {
            System.out.println("No se pudo hacer clic después de 3 intentos.");
        }
        System.out.println("El valor seleccionado en la seccion Interchange Fees by Program es: " + programType);

        Thread.sleep(3_009);
        evidencias();
    }

}
